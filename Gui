import tkinter as tk
from tkinter import messagebox
from datetime import datetime

class FoodItem:
    def __init__(self, name, quantity, expiry_date):
        self.name = name
        self.quantity = quantity
        self.expiry_date = expiry_date

    def is_expired(self):
        return datetime.now().date() > self.expiry_date

class FoodInventoryApp:
    def __init__(self, root):
        self.root = root
        self.root.title("Food Inventory Manager")
        self.inventory = []

        # Label and Entry for food name
        self.name_label = tk.Label(root, text="Food Name:")
        self.name_label.grid(row=0, column=0, padx=10, pady=10)
        self.name_entry = tk.Entry(root)
        self.name_entry.grid(row=0, column=1, padx=10, pady=10)

        # Label and Entry for quantity
        self.quantity_label = tk.Label(root, text="Quantity:")
        self.quantity_label.grid(row=1, column=0, padx=10, pady=10)
        self.quantity_entry = tk.Entry(root)
        self.quantity_entry.grid(row=1, column=1, padx=10, pady=10)

        # Label and Entry for expiry date
        self.expiry_label = tk.Label(root, text="Expiry Date (YYYY-MM-DD):")
        self.expiry_label.grid(row=2, column=0, padx=10, pady=10)
        self.expiry_entry = tk.Entry(root)
        self.expiry_entry.grid(row=2, column=1, padx=10, pady=10)

        # Buttons for actions
        self.add_button = tk.Button(root, text="Add Food", command=self.add_food)
        self.add_button.grid(row=3, column=0, padx=10, pady=10)

        self.show_button = tk.Button(root, text="Show Inventory", command=self.show_inventory)
        self.show_button.grid(row=3, column=1, padx=10, pady=10)

        self.check_expired_button = tk.Button(root, text="Check Expired", command=self.check_expired)
        self.check_expired_button.grid(row=4, column=0, padx=10, pady=10)

        self.reduce_waste_button = tk.Button(root, text="Reduce Food Waste", command=self.reduce_food_waste)
        self.reduce_waste_button.grid(row=4, column=1, padx=10, pady=10)

        # Output display area
        self.output_text = tk.Text(root, height=10, width=50)
        self.output_text.grid(row=5, column=0, columnspan=2, padx=10, pady=10)

    def add_food(self):
        try:
            name = self.name_entry.get()
            quantity = int(self.quantity_entry.get())
            expiry_date = datetime.strptime(self.expiry_entry.get(), '%Y-%m-%d').date()
            food_item = FoodItem(name, quantity, expiry_date)
            self.inventory.append(food_item)
            messagebox.showinfo("Success", f"{name} added to the inventory.")
            self.clear_entries()
        except ValueError:
            messagebox.showerror("Error", "Invalid input. Please enter valid data.")

    def show_inventory(self):
        self.output_text.delete(1.0, tk.END)
        if not self.inventory:
            self.output_text.insert(tk.END, "No items in the inventory.\n")
        else:
            self.output_text.insert(tk.END, "Current Inventory:\n")
            for item in self.inventory:
                status = "Expired" if item.is_expired() else "Fresh"
                self.output_text.insert(tk.END, f"{item.name}: {item.quantity} units - Expiry: {item.expiry_date} ({status})\n")

    def check_expired(self):
        self.output_text.delete(1.0, tk.END)
        expired_items = [item for item in self.inventory if item.is_expired()]
        if expired_items:
            self.output_text.insert(tk.END, "Expired items:\n")
            for item in expired_items:
                self.output_text.insert(tk.END, f"{item.name}: {item.quantity} units (Expired on {item.expiry_date})\n")
        else:
            self.output_text.insert(tk.END, "No expired items found.\n")

    def reduce_food_waste(self):
        expired_items = [item for item in self.inventory if item.is_expired()]
        if expired_items:
            for item in expired_items:
                self.inventory.remove(item)
            messagebox.showinfo("Info", "Expired items removed from the inventory.")
        else:
            messagebox.showinfo("Info", "No expired items to remove.")
        self.show_inventory()

    def clear_entries(self):
        self.name_entry.delete(0, tk.END)
        self.quantity_entry.delete(0, tk.END)
        self.expiry_entry.delete(0, tk.END)

# Create the main application window
root = tk.Tk()
app = FoodInventoryApp(root)
root.mainloop()
